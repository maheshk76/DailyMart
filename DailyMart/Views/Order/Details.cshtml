@model DailyMart.Models.Order
@using DailyMart.Models
@{ 
    ViewBag.Title = "Order Detail"+Model.Id;
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


    @*<div class="container-fluid">
        <div class="text-center">
            <h2>Products Details</h2>
            <hr class="w-50 text-dark" />
        </div>

        <div class="row">
            @foreach (OrderItem item in (List<OrderItem>)Model.OrderItems)
            {




                <div class="col-2">
                    <img src="@item.Product.ImageURL" class="rounded img-thumbnail" alt="..." style="width:175px;height:175px;">
                </div>
                <div class="col-4">

                    <div class="text-secondary h6"><b>Name-</b></div> <div class=" h3">@item.Product.Name</div>

                    <div class="text-secondary h6"><b>Quantity-</b></div> <div class=" h3">@item.Quantity</div>


                </div>



            }
        </div>
        </div>
    <div class="container">
        <div class="text-center">
            <h2>Customer and Address Details</h2>
            <hr class="w-50 text-dark" />
        </div>
        <div class="row">
            <div class="col-6">
                <table class="table">

                    <tbody>
                        <tr>
                            <th scope="row">Name</th>
                            <td>
                                @Html.DisplayFor(model => model.FirstName)&nbsp;@Html.DisplayFor(model => model.LastName)

                            </td>

                        </tr>
                        <tr>
                            <th scope="row">Contact Number</th>
                            <td>
                                @Html.DisplayFor(model => model.PhoneNumber)
                            </td>

                        </tr>
                        <tr>
                            <th scope="row">Total Price</th>
                            <td>
                                @Html.DisplayFor(model => model.TotalAmount)
                            </td>

                        </tr>
                        <tr>
                            <th scope="row">Payment Method</th>
                            <td>
                                @Html.DisplayFor(model => model.PaymentType)
                            </td>

                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="col-6">
               
                <table class="table mx-5">

                    <tbody>
                        <tr>
                            <th scope="row">Address1</th>
                            <td>
                                @Html.DisplayFor(model => model.Address1)

                            </td>

                        </tr>
                        <tr>
                            <th scope="row">Address2</th>
                            <td>
                                @Html.DisplayFor(model => model.Address2)
                            </td>

                        </tr>
                        <tr>
                            <th scope="row">City</th>

                            <td>
                                @Html.DisplayFor(model => model.City)
                            </td>

                        </tr>
                        <tr>
                            <th scope="row">Zip</th>

                            <td>
                                @Html.DisplayFor(model => model.ZipCode)
                            </td>

                        </tr>
                    </tbody>
                </table>
            </div>
        </div>

    </div>*@

   
    <div class="container">


        <div class="row">
            <div class="col-md-4 order-md-2 mb-4">
                <h4 class="d-flex justify-content-between align-items-center mb-3">
                    <span class="text-muted">Products</span>
                    <span class="badge badge-secondary badge-pill">@Model.OrderItems.Count</span>
                </h4>
                <ul class="list-group mb-3">
                    @foreach (OrderItem item in (List<OrderItem>)Model.OrderItems)
                    {
                    <li class="list-group-item d-flex justify-content-between lh-condensed">

                        <div>
                            <img src="@item.Product.ImageURL" class="rounded" alt="..." style="width:50px;height:50px;">

                            <h6 class="my-0">@item.Product.Name</h6>
                            <small class="text-muted">@item.Product.SellingPrice Rs.</small>
                        </div>
                        <span class="text-muted">Qty-&nbsp;@item.Quantity</span>
                    </li>
                       
                    }
                    <li class="list-group-item d-flex justify-content-between">
                        <span>Total (INR)</span>
                        <strong>@Model.Amount Rs.</strong>
                    </li>
                </ul>

                <form class="card p-2">
                    <div class="form-group">
                        <label for="status">Status</label>
                        <select class="form-control" name="Status" id="changeStatus">
                            @foreach (var availableStatus in ViewBag.AvailableStatuses)
                            {
                                var isSelectedStatus = availableStatus == Model.OrderStatus;

                                <option @(isSelectedStatus ? "selected" : string.Empty)>@availableStatus</option>
                            }

                        </select>
                    </div>
                </form>
            </div>
        </div>

        <div class="container">
            <p>
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
            </p>
        </div>


    </div>
           
           
    <script>
	$("#changeStatus").change(function () {
		$.ajax({
			url: '@Url.Action("ChangeStatus", "Order")',
			data: {
				status: $("#changeStatus").val(),
				ID: '@Model.Id'
			}
		})
        .done(function (response) {
        	if(response.Success)
        	{
        		swal("Done", "Order has been updated.", "success");
        	}
        	else {
        		swal("Error", "Unable to update Order", "warning");
        	}
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	alert("FAIL");
        });
	});
    </script>