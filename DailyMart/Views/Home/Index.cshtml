@model DailyMart.ViewModels.ShopViewModel
@using PagedList;
@using PagedList.Mvc;
@{ ViewBag.Title = "Home"; }
<section class="flat-row main-shop shop-slidebar">
    <div class="container">
        <div class="row">
            <div class="col-md-3">
                <div class="sidebar slidebar-shop">
                    <div class="widget widget_tag filterBtn">
                        <h5 class="widget-title">
                            <a href="@Url.Action("Index", "Home",new { reset = 1 })" class="themesflat-button bg-accent" style="font-weight:500!important;">Reset Filters</a>

                        </h5>

                    </div>
                    <div class="widget widget-search">
                        <div role="search" class="search-form">
                            <label>
                                <input type="search" id="searchTxt" class="search-field" placeholder="Search …" value="" name="search">
                            </label>

                        </div>
                    </div>
                    <div class="widget widget-sort-by">
                        <h5 class="widget-title">
                            Sort By
                        </h5>
                        <ul>
                            <li><a data-href="@Url.Action("Products", "Home", new { sortBy = 1, categoryID = Model.CategoryID })" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value ==1 ? "active" : string.Empty : string.Empty)">Default - Newest</a></li>
                            <li><a data-href="@Url.Action("Products", "Home", new { sortBy = 2, categoryID = Model.CategoryID })" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value ==2 ? "active" : string.Empty : string.Empty)">Popularity</a></li>
                            <li><a data-href="@Url.Action("Products", "Home", new { sortBy =3, categoryID = Model.CategoryID })" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == 3 ? "active" : string.Empty : string.Empty)">Price: low to high</a></li>
                            <li><a data-href="@Url.Action("Products", "Home",new { sortBy =4, categoryID = Model.CategoryID  })" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == 4 ? "active" : string.Empty : string.Empty)">Price: high to low</a></li>
                        </ul>
                    </div>
                    <div class="widget widget-price">
                        <h5 class="widget-title">Filter by price</h5>
                        <div class="price-filter">
                            <div id="slide-range"></div>
                            <p class="amount">
                                Price: <input type="text" id="amount" disabled="">
                            </p>
                        </div>
                    </div>
                    <div class="widget widget_tag">
                        <h5 class="widget-title">
                            Categories
                        </h5>
                        <div class="tag-list">
                            @foreach (var category in ViewBag.Categories)
                            {

                                            <a data-href="@Url.Action("Products", "Home",
                                            new { categoryID = category.Id, sortBy = Model.SortBy })"
                                               class="dataLink @(Model.CategoryID.HasValue && Model.CategoryID.Value == category.Id ? "active" : string.Empty)">
                                                @category.Name
                                            </a>}
                        </div>
                    </div><!-- /.widget -->


                </div><!-- /.sidebar -->
            </div><!-- /.col-md-3 -->
            <div class="col-md-9" id="productsDiv">

                @{Html.RenderAction("Products", "Home",
                                new
                                {
                                    search = Model.Search,
                                    categoryId = Model.CategoryID,
                                    minimumPrice = ViewBag.MinimumPrice,
                                    maximumPrice = ViewBag.MaximumPrice,
                                    sortBy = Model.SortBy,
                                    products = ViewBag.products
                                }); }
            </div><!-- /.col-md-9 -->



        </div><!-- /.row -->
    </div><!-- /.container -->
</section><!-- /.flat-row -->

@section Scripts{
    <script>
        $(document).ready(function () {
        $(".filterBtn").hide();
    $("#amount").val("$" +@Model.MinimumPrice + ".00" + " - " + "$" + @ViewBag.MaximumPrice + ".00");
	var callTimeout;
	var priceSlider = $("#slide-range").slider({
		range: true,
		min: 0,
		max: @Model.MaximumPrice,
		values: [@Model.MinimumPrice,@ViewBag.MaximumPrice],
		slide: function (event, ui) {
			var minPrice = ui.values[0];
			var maxPrice = ui.values[1];

			$("#amount").val("$" + minPrice + ".00" + " - " + "$" + maxPrice + ".00");

			clearTimeout(callTimeout);
			callTimeout = setTimeout(PriceRangeChange, 800);
		}
	});
        $(".filterBtn").click(function () {
            setTimeout(function () { $(".filterBtn").hide(); }, 2000);

        });
	$(".dataLink").click(function () {
		var url = $(this).attr("data-href");
        ShowHideBtn();
		if (url != "" || url != undefined) {
			GetData(url);
		}
	});


        $("#searchTxt").change(function () {
            showLoader();
            ShowHideBtn();
            var searchValue = $("#searchTxt").val();
            $.ajax({
			    url:'@Url.Action("Products", "Home")',
                data: {
                    search: searchValue,
				    sortBy: $("#SortBy").val(),
				    categoryID: $("#CategoryID").val(),
				    minimumPrice : priceSlider.slider("values", 0),
				    maximumPrice : priceSlider.slider("values", 1)
                }
		    })
           .done(function (response) {
        	    console.log("done search");
               $("#productsDiv").html(response);
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	    console.log("fail search");
        	    alert("FAIL");
            })
		    .always(function(){
                console.log("always");
                hideLoader();
		    });
		    console.log("getdata out");
        });
       $(".shopnow").click(function () {
    });

        
        function GetData(dUrl) {

		console.log("getdata in");
    showLoader();  console.log("show");

		$.ajax({
			url: dUrl,
            data: {

				minimumPrice : priceSlider.slider("values", 0),
				maximumPrice : priceSlider.slider("values", 1)
			}
		})
        .done(function (response) {
        	console.log("done");
            $("#productsDiv").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	console.log("fail");
        	alert("FAIL");
        })
		.always(function(){
			console.log("always");
            hideLoader();
		});
		console.log("getdata out");
        }

        function PriceRangeChange() {
            ShowHideBtn();
            showLoader();
            console.log("show");
		$.ajax({
			url: '@Url.Action("Products", "Home")',
			data: {
				search: $("#SearchTerm").val(),
				sortBy: $("#SortBy").val(),
				categoryID: $("#CategoryID").val(),
				minimumPrice : priceSlider.slider("values", 0),
				maximumPrice : priceSlider.slider("values", 1)
			}
		})
        .done(function (response) {
            $("#productsDiv").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	alert("FAIL");
        })
        .always(function(){
			console.log("always");
            hideLoader();
		});
        }
        function ShowHideBtn() {
            $(".filterBtn").show();

        }
        
        });


    </script>
}
