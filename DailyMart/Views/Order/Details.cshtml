@model DailyMart.ViewModels.OrderDetailViewModel
@using DailyMart.Models
@{
    ViewBag.Title = "Order Detail" + Model.Order.Id;
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="container mt-5">


    <div class="row">
        <div class="col-md-6 order-md-2 ml-3">
            <h4 class="mb-3 text-muted">Customer Details and Billing Address</h4>
            <div class="mb-3">
                <label for="firstName">Customer Name</label>
                <input type="text" class="form-control" readonly value="@Model.User.Name">
            </div>
            <div class="mb-3">
                <label for="contact">Contact Number</label>
                <input class="form-control" readonly value="@Model.User.PhoneNumber">
            </div>
            <div class="mb-3">
                <label for="address">AddressLine</label>
                <input type="text" class="form-control" readonly value="@Model.Address.AddressLine">
            </div>
            <div class="row">
                <div class="col-md-4 mb-3">
                    <label for="city">City</label>
                    <input type="text" class="form-control" readonly value="@Model.Address.City">
                </div>
                <div class="col-md-3 mb-3">
                    <label for="zip">Zip</label>
                    <input type="text" class="form-control" readonly value="@Model.Address.ZipCode">

                </div>
            </div>
            <hr class="mb-4">
        </div>
        <div class="col-md-4 order-md-1 mb-3 mr-5">
            <h4 class="d-flex justify-content-between align-items-center mb-3">
                <span class="text-muted">Products</span>
                <span class="badge badge-secondary badge-pill">@Model.Order.OrderItems.Count</span>
            </h4>
            <ul class="list-group mb-3">

                @foreach (OrderItem item in (List<OrderItem>)Model.Order.OrderItems)
                {
                    <li class="list-group-item d-flex justify-content-between">
                        <span>OrderDate</span>
                        <strong>@item.Order.OrderDate.ToString("dd-MM-yyyy")</strong>
                    </li>
                    <li class="list-group-item d-flex justify-content-between lh-condensed">

                        <div>
                            <img src="@item.Product.ImageURL" class="rounded" alt="..." style="width:50px;height:50px;">

                            <h6 class="my-0">@item.Product.Name</h6>
                            <small class="text-muted">@item.Product.SellingPrice Rs.</small>
                        </div>
                        <span class="text-muted">Qty-&nbsp;@item.Quantity</span>
                    </li>

                }
                <li class="list-group-item d-flex justify-content-between">
                    <span>Total (INR)</span>
                    <strong>@Model.Order.Amount Rs.</strong>
                </li>
            </ul>

            <form class="card p-2">
                <div class="form-group">
                    <label for="status">Status</label>
                    <select class="form-control" name="Status" id="changeStatus">
                        @foreach (var availableStatus in ViewBag.AvailableStatuses)
                        {
                            var isSelectedStatus = availableStatus == Model.Order.OrderStatus;

                            <option @(isSelectedStatus ? "selected" : string.Empty)>@availableStatus</option>
                        }

                    </select>
                </div>
            </form>
        </div>

    </div>
    <div class="container">
        <p>
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
        </p>
    </div>


</div>


<script>
	$("#changeStatus").change(function () {
		$.ajax({
			url: '@Url.Action("ChangeStatus", "Order")',
			data: {
				status: $("#changeStatus").val(),
				ID: '@Model.Order.Id'
			}
		})
        .done(function (response) {
        	if(response.Success)
        	{
        		swal("Done", "Order has been updated.", "success");
        	}
        	else {
        		swal("Error", "Unable to update Order", "warning");
        	}
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	alert("FAIL");
        });
	});
</script>